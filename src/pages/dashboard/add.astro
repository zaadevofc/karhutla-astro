---
import { Button } from "@material-tailwind/react";
import prisma from "../../../modules/db";
import { decode, parser } from "../../../modules/utils";
import Input from "../../components/Input.astro";
import Maps from "../../components/Maps.astro";
import Navbarr from "../../components/Navbarr.astro";
import Sidebar from "../../components/Sidebar";
import Layout from "../../layouts/Layout.astro";

let query = await Astro.request.text();
let method = Astro.request.method;
let kasusId = Astro.url.searchParams.get('kasusId') || null;
let uri = Astro.url.pathname;
let body = decode(parser(query));

globalThis.inputUpdate = null;

if (!!kasusId) {
  const check = await prisma.kasus.findMany({ where: { kasus_id: kasusId } })
  if (check.length != 0) {
    globalThis.inputUpdate = check[0];
  }
}

if (method == "POST" && !globalThis.inputUpdate) {
  const add = await prisma.kasus.create({ data: body });
  return Astro.redirect(uri);
}

if (method == "POST" && !!globalThis.inputUpdate) {
  const update = await prisma.kasus.updateMany({ where: { kasus_id: kasusId.toString() },
    data: body
  }); 
  return Astro.redirect('/dashboard/list');
}
---

<Layout title="Karhutla">
  <div class="flex flex-row justify-between divide-x divide-black">
    <div class="flex flex-col w-auto p-4 border-b border-black">
      <Sidebar path={uri} />
    </div>
    <div class="flex flex-col w-full">
      <Navbarr title="Tambah Data" />
      <div class="flex flex-row gap-10 justify-between p-5 w-full">
        <div class="flex flex-col p-3 w-1/2">
          <div class="flex flex-row justify-between items-center">
            <h1 class="font-bold text-3xl pb-2">Data Karhutla</h1>
            <h1 id="curr-pos" class="px-2 py-1 shadow-md shadow-orange-500/10 border border-orange-600 rounded-xl md:cursor-pointer">Lokasi sekarang</h1>
          </div>
          <h1 hidden={!globalThis.inputUpdate} class="text-amber-800 font-medium">✏️ Data lama akan di ganti jika ada perubahan.</h1>
          <form method="post" action="#" class="flex flex-col gap-4 mt-10">
            <div class="flex flex-row justify-between gap-3">
              <div class="flex flex-col gap-2 w-full">
                <h1 class="text-sm">Masukan judul :</h1>
                <Input name="title" placeholder="Rumah Warga" />
              </div>
              <div class="flex flex-col gap-2 w-full">
                <h1 class="text-sm">Masukan level :</h1>
                <select id="level" name="level" class="px-4 py-2 w-full rounded-lg outline-none border border-black">
                  <option value="KOSONG" class="text-gray-600 font-semibold">KOSONG</option>
                  <option value="RENDAH" class="text-blue-600 font-semibold">RENDAH</option>
                  <option value="MENENGAH" class="text-amber-600 font-semibold">MENENGAH</option>
                  <option value="TINGGI" class="text-red-600 font-semibold">TINGGI</option>
                </select>
              </div>
            </div>
            <div class="flex flex-col gap-2">
              <h1 class="text-sm">Masukan alamat :</h1>
              <Input name="address" placeholder="Jl. XXXXX XXXXX...." />
            </div>
            <div class="flex flex-row justify-between gap-3">
              <div class="flex flex-col gap-2 w-full">
                <h1 class="text-sm">Masukan latitude :</h1>
                <Input name="lat" placeholder="-00.00000" />
              </div>
              <div class="flex flex-col gap-2 w-full">
                <h1 class="text-sm">Masukan longitude :</h1>
                <Input name="long" placeholder="00.000000" />
              </div>
            </div>
            <div class="flex flex-row items-center gap-3 w-full mt-10">
              <Button type="reset" className="w-full" color="blue" variant="outlined">
                Reset
              </Button>
              <Button type="submit" className="w-full" color="green" variant="outlined">
                Simpan
              </Button>
            </div>
          </form>
        </div>
        <div class="w-1/2">
          <Maps height={'!h-[650px]'} maping={true} />
        </div>
      </div>
    </div>
  </div>
</Layout>

<script define:vars={{ inputUpdate: globalThis.inputUpdate }}>
  let docQ = (tag) => document.querySelector(`input[name="${tag}"]`);

  globalThis.inputUpdate = inputUpdate;

  docQ('title').value = inputUpdate.title;
  docId('level').value = inputUpdate.level;
  docQ('address').value = inputUpdate.address;
  docQ('lat').value = inputUpdate.lat;
  docQ('long').value = inputUpdate.long;
</script>